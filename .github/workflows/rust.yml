name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker
      run: |
        sudo service docker start
        echo "Docker daemon started"

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Start services with Docker Compose
      run: | 
        docker-compose up -d
        sleep 10
    
    - name: Setup .env
      run: |
        echo "${{secrets.DATABASE_URL }}" > .env

    - name: Run migrations
      run: |
        cargo install sqlx-cli
        sqlx migrate run

    - name: Check and Lint
      run: |
        cargo check
        cargo clippy -- -D warnings

    - name: Check sqlx query cache
      run: cargo sqlx prepare --check

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose

    - name: Set up Docker Buildx      
      uses: docker/setup-buildx-action@v3

    - name: Login to Container Registry      
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: zero2prod-server:latest
